// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: UserAndGameServer.proto
// Protobuf C++ Version: 5.30.0-dev

#include "UserAndGameServer.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace UserAndGameServer {

inline constexpr ReqTestMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReqTestMsg::ReqTestMsg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ReqTestMsg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReqTestMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqTestMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqTestMsgDefaultTypeInternal() {}
  union {
    ReqTestMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqTestMsgDefaultTypeInternal _ReqTestMsg_default_instance_;

inline constexpr ReqPublicKey::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReqPublicKey::ReqPublicKey(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ReqPublicKey_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReqPublicKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqPublicKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqPublicKeyDefaultTypeInternal() {}
  union {
    ReqPublicKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqPublicKeyDefaultTypeInternal _ReqPublicKey_default_instance_;

inline constexpr ReqConnect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReqConnect::ReqConnect(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ReqConnect_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReqConnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqConnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqConnectDefaultTypeInternal() {}
  union {
    ReqConnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqConnectDefaultTypeInternal _ReqConnect_default_instance_;

inline constexpr ErrInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : err_desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        err_no_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ErrInfo::ErrInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ErrInfo_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ErrInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrInfoDefaultTypeInternal() {}
  union {
    ErrInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrInfoDefaultTypeInternal _ErrInfo_default_instance_;

inline constexpr AnsTestMsg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnsTestMsg::AnsTestMsg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AnsTestMsg_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AnsTestMsgDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnsTestMsgDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnsTestMsgDefaultTypeInternal() {}
  union {
    AnsTestMsg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnsTestMsgDefaultTypeInternal _AnsTestMsg_default_instance_;

inline constexpr AnsPublicKey::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnsPublicKey::AnsPublicKey(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AnsPublicKey_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AnsPublicKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnsPublicKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnsPublicKeyDefaultTypeInternal() {}
  union {
    AnsPublicKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnsPublicKeyDefaultTypeInternal _AnsPublicKey_default_instance_;

inline constexpr AnsConnect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnsConnect::AnsConnect(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AnsConnect_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AnsConnectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnsConnectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnsConnectDefaultTypeInternal() {}
  union {
    AnsConnect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnsConnectDefaultTypeInternal _AnsConnect_default_instance_;
}  // namespace UserAndGameServer
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_UserAndGameServer_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_UserAndGameServer_2eproto = nullptr;
const ::uint32_t
    TableStruct_UserAndGameServer_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ErrInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ErrInfo, _impl_.err_no_),
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ErrInfo, _impl_.err_desc_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ReqPublicKey, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ReqPublicKey, _impl_.device_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::AnsPublicKey, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::AnsPublicKey, _impl_.public_key_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ReqConnect, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ReqConnect, _impl_.device_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::AnsConnect, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::AnsConnect, _impl_.is_success_),
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::AnsConnect, _impl_.session_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ReqTestMsg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ReqTestMsg, _impl_.msg_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::AnsTestMsg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::AnsTestMsg, _impl_.msg_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::UserAndGameServer::ErrInfo)},
        {10, -1, -1, sizeof(::UserAndGameServer::ReqPublicKey)},
        {19, -1, -1, sizeof(::UserAndGameServer::AnsPublicKey)},
        {28, -1, -1, sizeof(::UserAndGameServer::ReqConnect)},
        {37, -1, -1, sizeof(::UserAndGameServer::AnsConnect)},
        {47, -1, -1, sizeof(::UserAndGameServer::ReqTestMsg)},
        {56, -1, -1, sizeof(::UserAndGameServer::AnsTestMsg)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::UserAndGameServer::_ErrInfo_default_instance_._instance,
    &::UserAndGameServer::_ReqPublicKey_default_instance_._instance,
    &::UserAndGameServer::_AnsPublicKey_default_instance_._instance,
    &::UserAndGameServer::_ReqConnect_default_instance_._instance,
    &::UserAndGameServer::_AnsConnect_default_instance_._instance,
    &::UserAndGameServer::_ReqTestMsg_default_instance_._instance,
    &::UserAndGameServer::_AnsTestMsg_default_instance_._instance,
};
const char descriptor_table_protodef_UserAndGameServer_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027UserAndGameServer.proto\022\021UserAndGameSe"
    "rver\"+\n\007ErrInfo\022\016\n\006err_no\030\001 \001(\004\022\020\n\010err_d"
    "esc\030\002 \001(\t\"!\n\014ReqPublicKey\022\021\n\tdevice_id\030\001"
    " \001(\t\"\"\n\014AnsPublicKey\022\022\n\npublic_key\030\001 \001(\t"
    "\"\037\n\nReqConnect\022\021\n\tdevice_id\030\001 \001(\t\"4\n\nAns"
    "Connect\022\022\n\nis_success\030\001 \001(\010\022\022\n\nsession_i"
    "d\030\002 \001(\t\"\031\n\nReqTestMsg\022\013\n\003msg\030\001 \001(\t\"\031\n\nAn"
    "sTestMsg\022\013\n\003msg\030\001 \001(\t*>\n\007MsgType\022\016\n\nUnex"
    "pected\020\000\022\007\n\003Req\020\001\022\007\n\003Ans\020\002\022\010\n\004Noti\020\003\022\007\n\003"
    "Err\020\004b\006proto3"
};
static ::absl::once_flag descriptor_table_UserAndGameServer_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_UserAndGameServer_2eproto = {
    false,
    false,
    373,
    descriptor_table_protodef_UserAndGameServer_2eproto,
    "UserAndGameServer.proto",
    &descriptor_table_UserAndGameServer_2eproto_once,
    nullptr,
    0,
    7,
    schemas,
    file_default_instances,
    TableStruct_UserAndGameServer_2eproto::offsets,
    file_level_enum_descriptors_UserAndGameServer_2eproto,
    file_level_service_descriptors_UserAndGameServer_2eproto,
};
namespace UserAndGameServer {
const ::google::protobuf::EnumDescriptor* MsgType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_UserAndGameServer_2eproto);
  return file_level_enum_descriptors_UserAndGameServer_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t MsgType_internal_data_[] = {
    327680u, 0u, };
bool MsgType_IsValid(int value) {
  return 0 <= value && value <= 4;
}
// ===================================================================

class ErrInfo::_Internal {
 public:
};

ErrInfo::ErrInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ErrInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.ErrInfo)
}
inline PROTOBUF_NDEBUG_INLINE ErrInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::ErrInfo& from_msg)
      : err_desc_(arena, from.err_desc_),
        _cached_size_{0} {}

ErrInfo::ErrInfo(
    ::google::protobuf::Arena* arena,
    const ErrInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ErrInfo_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ErrInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.err_no_ = from._impl_.err_no_;

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.ErrInfo)
}
inline PROTOBUF_NDEBUG_INLINE ErrInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : err_desc_(arena),
        _cached_size_{0} {}

inline void ErrInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.err_no_ = {};
}
ErrInfo::~ErrInfo() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.ErrInfo)
  SharedDtor(*this);
}
inline void ErrInfo::SharedDtor(MessageLite& self) {
  ErrInfo& this_ = static_cast<ErrInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.err_desc_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ErrInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ErrInfo(arena);
}
constexpr auto ErrInfo::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ErrInfo),
                                            alignof(ErrInfo));
}
constexpr auto ErrInfo::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ErrInfo_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ErrInfo::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ErrInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ErrInfo::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ErrInfo>(), &ErrInfo::ByteSizeLong,
              &ErrInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ErrInfo, _impl_._cached_size_),
          false,
      },
      &ErrInfo::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ErrInfo_class_data_ =
            ErrInfo::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ErrInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ErrInfo_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ErrInfo_class_data_.tc_table);
  return ErrInfo_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> ErrInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ErrInfo_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::ErrInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string err_desc = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ErrInfo, _impl_.err_desc_)}},
    // uint64 err_no = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ErrInfo, _impl_.err_no_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ErrInfo, _impl_.err_no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 err_no = 1;
    {PROTOBUF_FIELD_OFFSET(ErrInfo, _impl_.err_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string err_desc = 2;
    {PROTOBUF_FIELD_OFFSET(ErrInfo, _impl_.err_desc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\10\0\0\0\0\0"
    "UserAndGameServer.ErrInfo"
    "err_desc"
  }},
};

PROTOBUF_NOINLINE void ErrInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.ErrInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.err_desc_.ClearToEmpty();
  _impl_.err_no_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ErrInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ErrInfo& this_ = static_cast<const ErrInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ErrInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ErrInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.ErrInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 err_no = 1;
          if (this_._internal_err_no() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_err_no(), target);
          }

          // string err_desc = 2;
          if (!this_._internal_err_desc().empty()) {
            const std::string& _s = this_._internal_err_desc();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.ErrInfo.err_desc");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.ErrInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ErrInfo::ByteSizeLong(const MessageLite& base) {
          const ErrInfo& this_ = static_cast<const ErrInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ErrInfo::ByteSizeLong() const {
          const ErrInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.ErrInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string err_desc = 2;
            if (!this_._internal_err_desc().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_err_desc());
            }
            // uint64 err_no = 1;
            if (this_._internal_err_no() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_err_no());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ErrInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ErrInfo*>(&to_msg);
  auto& from = static_cast<const ErrInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.ErrInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_err_desc().empty()) {
    _this->_internal_set_err_desc(from._internal_err_desc());
  }
  if (from._internal_err_no() != 0) {
    _this->_impl_.err_no_ = from._impl_.err_no_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ErrInfo::CopyFrom(const ErrInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.ErrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ErrInfo::InternalSwap(ErrInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.err_desc_, &other->_impl_.err_desc_, arena);
        swap(_impl_.err_no_, other->_impl_.err_no_);
}

::google::protobuf::Metadata ErrInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReqPublicKey::_Internal {
 public:
};

ReqPublicKey::ReqPublicKey(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ReqPublicKey_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.ReqPublicKey)
}
inline PROTOBUF_NDEBUG_INLINE ReqPublicKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::ReqPublicKey& from_msg)
      : device_id_(arena, from.device_id_),
        _cached_size_{0} {}

ReqPublicKey::ReqPublicKey(
    ::google::protobuf::Arena* arena,
    const ReqPublicKey& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ReqPublicKey_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReqPublicKey* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.ReqPublicKey)
}
inline PROTOBUF_NDEBUG_INLINE ReqPublicKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_id_(arena),
        _cached_size_{0} {}

inline void ReqPublicKey::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ReqPublicKey::~ReqPublicKey() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.ReqPublicKey)
  SharedDtor(*this);
}
inline void ReqPublicKey::SharedDtor(MessageLite& self) {
  ReqPublicKey& this_ = static_cast<ReqPublicKey&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReqPublicKey::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReqPublicKey(arena);
}
constexpr auto ReqPublicKey::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReqPublicKey),
                                            alignof(ReqPublicKey));
}
constexpr auto ReqPublicKey::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ReqPublicKey_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ReqPublicKey::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ReqPublicKey>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ReqPublicKey::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ReqPublicKey>(), &ReqPublicKey::ByteSizeLong,
              &ReqPublicKey::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ReqPublicKey, _impl_._cached_size_),
          false,
      },
      &ReqPublicKey::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ReqPublicKey_class_data_ =
            ReqPublicKey::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ReqPublicKey::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ReqPublicKey_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ReqPublicKey_class_data_.tc_table);
  return ReqPublicKey_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 48, 2> ReqPublicKey::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ReqPublicKey_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::ReqPublicKey>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReqPublicKey, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(ReqPublicKey, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\11\0\0\0\0\0\0"
    "UserAndGameServer.ReqPublicKey"
    "device_id"
  }},
};

PROTOBUF_NOINLINE void ReqPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.ReqPublicKey)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReqPublicKey::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReqPublicKey& this_ = static_cast<const ReqPublicKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReqPublicKey::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReqPublicKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.ReqPublicKey)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string device_id = 1;
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.ReqPublicKey.device_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.ReqPublicKey)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReqPublicKey::ByteSizeLong(const MessageLite& base) {
          const ReqPublicKey& this_ = static_cast<const ReqPublicKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReqPublicKey::ByteSizeLong() const {
          const ReqPublicKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.ReqPublicKey)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string device_id = 1;
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReqPublicKey::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReqPublicKey*>(&to_msg);
  auto& from = static_cast<const ReqPublicKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.ReqPublicKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReqPublicKey::CopyFrom(const ReqPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.ReqPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReqPublicKey::InternalSwap(ReqPublicKey* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
}

::google::protobuf::Metadata ReqPublicKey::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AnsPublicKey::_Internal {
 public:
};

AnsPublicKey::AnsPublicKey(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AnsPublicKey_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.AnsPublicKey)
}
inline PROTOBUF_NDEBUG_INLINE AnsPublicKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::AnsPublicKey& from_msg)
      : public_key_(arena, from.public_key_),
        _cached_size_{0} {}

AnsPublicKey::AnsPublicKey(
    ::google::protobuf::Arena* arena,
    const AnsPublicKey& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AnsPublicKey_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AnsPublicKey* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.AnsPublicKey)
}
inline PROTOBUF_NDEBUG_INLINE AnsPublicKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : public_key_(arena),
        _cached_size_{0} {}

inline void AnsPublicKey::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AnsPublicKey::~AnsPublicKey() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.AnsPublicKey)
  SharedDtor(*this);
}
inline void AnsPublicKey::SharedDtor(MessageLite& self) {
  AnsPublicKey& this_ = static_cast<AnsPublicKey&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_key_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AnsPublicKey::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AnsPublicKey(arena);
}
constexpr auto AnsPublicKey::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnsPublicKey),
                                            alignof(AnsPublicKey));
}
constexpr auto AnsPublicKey::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AnsPublicKey_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AnsPublicKey::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AnsPublicKey>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AnsPublicKey::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AnsPublicKey>(), &AnsPublicKey::ByteSizeLong,
              &AnsPublicKey::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AnsPublicKey, _impl_._cached_size_),
          false,
      },
      &AnsPublicKey::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        AnsPublicKey_class_data_ =
            AnsPublicKey::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* AnsPublicKey::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AnsPublicKey_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AnsPublicKey_class_data_.tc_table);
  return AnsPublicKey_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2> AnsPublicKey::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AnsPublicKey_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::AnsPublicKey>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string public_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnsPublicKey, _impl_.public_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string public_key = 1;
    {PROTOBUF_FIELD_OFFSET(AnsPublicKey, _impl_.public_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\12\0\0\0\0\0\0"
    "UserAndGameServer.AnsPublicKey"
    "public_key"
  }},
};

PROTOBUF_NOINLINE void AnsPublicKey::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.AnsPublicKey)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.public_key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AnsPublicKey::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AnsPublicKey& this_ = static_cast<const AnsPublicKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AnsPublicKey::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AnsPublicKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.AnsPublicKey)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string public_key = 1;
          if (!this_._internal_public_key().empty()) {
            const std::string& _s = this_._internal_public_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.AnsPublicKey.public_key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.AnsPublicKey)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AnsPublicKey::ByteSizeLong(const MessageLite& base) {
          const AnsPublicKey& this_ = static_cast<const AnsPublicKey&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AnsPublicKey::ByteSizeLong() const {
          const AnsPublicKey& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.AnsPublicKey)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string public_key = 1;
            if (!this_._internal_public_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_public_key());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AnsPublicKey::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnsPublicKey*>(&to_msg);
  auto& from = static_cast<const AnsPublicKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.AnsPublicKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_public_key().empty()) {
    _this->_internal_set_public_key(from._internal_public_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnsPublicKey::CopyFrom(const AnsPublicKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.AnsPublicKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnsPublicKey::InternalSwap(AnsPublicKey* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
}

::google::protobuf::Metadata AnsPublicKey::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReqConnect::_Internal {
 public:
};

ReqConnect::ReqConnect(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ReqConnect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.ReqConnect)
}
inline PROTOBUF_NDEBUG_INLINE ReqConnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::ReqConnect& from_msg)
      : device_id_(arena, from.device_id_),
        _cached_size_{0} {}

ReqConnect::ReqConnect(
    ::google::protobuf::Arena* arena,
    const ReqConnect& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ReqConnect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReqConnect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.ReqConnect)
}
inline PROTOBUF_NDEBUG_INLINE ReqConnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_id_(arena),
        _cached_size_{0} {}

inline void ReqConnect::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ReqConnect::~ReqConnect() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.ReqConnect)
  SharedDtor(*this);
}
inline void ReqConnect::SharedDtor(MessageLite& self) {
  ReqConnect& this_ = static_cast<ReqConnect&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReqConnect::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReqConnect(arena);
}
constexpr auto ReqConnect::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReqConnect),
                                            alignof(ReqConnect));
}
constexpr auto ReqConnect::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ReqConnect_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ReqConnect::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ReqConnect>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ReqConnect::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ReqConnect>(), &ReqConnect::ByteSizeLong,
              &ReqConnect::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ReqConnect, _impl_._cached_size_),
          false,
      },
      &ReqConnect::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ReqConnect_class_data_ =
            ReqConnect::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ReqConnect::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ReqConnect_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ReqConnect_class_data_.tc_table);
  return ReqConnect_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 46, 2> ReqConnect::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ReqConnect_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::ReqConnect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReqConnect, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(ReqConnect, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\11\0\0\0\0\0\0"
    "UserAndGameServer.ReqConnect"
    "device_id"
  }},
};

PROTOBUF_NOINLINE void ReqConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.ReqConnect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReqConnect::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReqConnect& this_ = static_cast<const ReqConnect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReqConnect::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReqConnect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.ReqConnect)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string device_id = 1;
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.ReqConnect.device_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.ReqConnect)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReqConnect::ByteSizeLong(const MessageLite& base) {
          const ReqConnect& this_ = static_cast<const ReqConnect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReqConnect::ByteSizeLong() const {
          const ReqConnect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.ReqConnect)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string device_id = 1;
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReqConnect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReqConnect*>(&to_msg);
  auto& from = static_cast<const ReqConnect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.ReqConnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReqConnect::CopyFrom(const ReqConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.ReqConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReqConnect::InternalSwap(ReqConnect* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
}

::google::protobuf::Metadata ReqConnect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AnsConnect::_Internal {
 public:
};

AnsConnect::AnsConnect(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AnsConnect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.AnsConnect)
}
inline PROTOBUF_NDEBUG_INLINE AnsConnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::AnsConnect& from_msg)
      : session_id_(arena, from.session_id_),
        _cached_size_{0} {}

AnsConnect::AnsConnect(
    ::google::protobuf::Arena* arena,
    const AnsConnect& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AnsConnect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AnsConnect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_success_ = from._impl_.is_success_;

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.AnsConnect)
}
inline PROTOBUF_NDEBUG_INLINE AnsConnect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : session_id_(arena),
        _cached_size_{0} {}

inline void AnsConnect::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_success_ = {};
}
AnsConnect::~AnsConnect() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.AnsConnect)
  SharedDtor(*this);
}
inline void AnsConnect::SharedDtor(MessageLite& self) {
  AnsConnect& this_ = static_cast<AnsConnect&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AnsConnect::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AnsConnect(arena);
}
constexpr auto AnsConnect::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnsConnect),
                                            alignof(AnsConnect));
}
constexpr auto AnsConnect::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AnsConnect_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AnsConnect::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AnsConnect>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AnsConnect::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AnsConnect>(), &AnsConnect::ByteSizeLong,
              &AnsConnect::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AnsConnect, _impl_._cached_size_),
          false,
      },
      &AnsConnect::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        AnsConnect_class_data_ =
            AnsConnect::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* AnsConnect::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AnsConnect_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AnsConnect_class_data_.tc_table);
  return AnsConnect_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> AnsConnect::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AnsConnect_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::AnsConnect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string session_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnsConnect, _impl_.session_id_)}},
    // bool is_success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AnsConnect, _impl_.is_success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AnsConnect, _impl_.is_success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_success = 1;
    {PROTOBUF_FIELD_OFFSET(AnsConnect, _impl_.is_success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string session_id = 2;
    {PROTOBUF_FIELD_OFFSET(AnsConnect, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\12\0\0\0\0\0"
    "UserAndGameServer.AnsConnect"
    "session_id"
  }},
};

PROTOBUF_NOINLINE void AnsConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.AnsConnect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  _impl_.is_success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AnsConnect::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AnsConnect& this_ = static_cast<const AnsConnect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AnsConnect::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AnsConnect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.AnsConnect)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_success = 1;
          if (this_._internal_is_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_success(), target);
          }

          // string session_id = 2;
          if (!this_._internal_session_id().empty()) {
            const std::string& _s = this_._internal_session_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.AnsConnect.session_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.AnsConnect)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AnsConnect::ByteSizeLong(const MessageLite& base) {
          const AnsConnect& this_ = static_cast<const AnsConnect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AnsConnect::ByteSizeLong() const {
          const AnsConnect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.AnsConnect)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string session_id = 2;
            if (!this_._internal_session_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_id());
            }
            // bool is_success = 1;
            if (this_._internal_is_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AnsConnect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnsConnect*>(&to_msg);
  auto& from = static_cast<const AnsConnect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.AnsConnect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_is_success() != 0) {
    _this->_impl_.is_success_ = from._impl_.is_success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnsConnect::CopyFrom(const AnsConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.AnsConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnsConnect::InternalSwap(AnsConnect* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
        swap(_impl_.is_success_, other->_impl_.is_success_);
}

::google::protobuf::Metadata AnsConnect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReqTestMsg::_Internal {
 public:
};

ReqTestMsg::ReqTestMsg(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ReqTestMsg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.ReqTestMsg)
}
inline PROTOBUF_NDEBUG_INLINE ReqTestMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::ReqTestMsg& from_msg)
      : msg_(arena, from.msg_),
        _cached_size_{0} {}

ReqTestMsg::ReqTestMsg(
    ::google::protobuf::Arena* arena,
    const ReqTestMsg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ReqTestMsg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReqTestMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.ReqTestMsg)
}
inline PROTOBUF_NDEBUG_INLINE ReqTestMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_(arena),
        _cached_size_{0} {}

inline void ReqTestMsg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ReqTestMsg::~ReqTestMsg() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.ReqTestMsg)
  SharedDtor(*this);
}
inline void ReqTestMsg::SharedDtor(MessageLite& self) {
  ReqTestMsg& this_ = static_cast<ReqTestMsg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.msg_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ReqTestMsg::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ReqTestMsg(arena);
}
constexpr auto ReqTestMsg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ReqTestMsg),
                                            alignof(ReqTestMsg));
}
constexpr auto ReqTestMsg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ReqTestMsg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ReqTestMsg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ReqTestMsg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ReqTestMsg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ReqTestMsg>(), &ReqTestMsg::ByteSizeLong,
              &ReqTestMsg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ReqTestMsg, _impl_._cached_size_),
          false,
      },
      &ReqTestMsg::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ReqTestMsg_class_data_ =
            ReqTestMsg::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ReqTestMsg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ReqTestMsg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ReqTestMsg_class_data_.tc_table);
  return ReqTestMsg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> ReqTestMsg::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ReqTestMsg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::ReqTestMsg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string msg = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReqTestMsg, _impl_.msg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string msg = 1;
    {PROTOBUF_FIELD_OFFSET(ReqTestMsg, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\3\0\0\0\0\0\0"
    "UserAndGameServer.ReqTestMsg"
    "msg"
  }},
};

PROTOBUF_NOINLINE void ReqTestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.ReqTestMsg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ReqTestMsg::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ReqTestMsg& this_ = static_cast<const ReqTestMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ReqTestMsg::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ReqTestMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.ReqTestMsg)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string msg = 1;
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.ReqTestMsg.msg");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.ReqTestMsg)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ReqTestMsg::ByteSizeLong(const MessageLite& base) {
          const ReqTestMsg& this_ = static_cast<const ReqTestMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ReqTestMsg::ByteSizeLong() const {
          const ReqTestMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.ReqTestMsg)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string msg = 1;
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_msg());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ReqTestMsg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReqTestMsg*>(&to_msg);
  auto& from = static_cast<const ReqTestMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.ReqTestMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReqTestMsg::CopyFrom(const ReqTestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.ReqTestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReqTestMsg::InternalSwap(ReqTestMsg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
}

::google::protobuf::Metadata ReqTestMsg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AnsTestMsg::_Internal {
 public:
};

AnsTestMsg::AnsTestMsg(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AnsTestMsg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.AnsTestMsg)
}
inline PROTOBUF_NDEBUG_INLINE AnsTestMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::AnsTestMsg& from_msg)
      : msg_(arena, from.msg_),
        _cached_size_{0} {}

AnsTestMsg::AnsTestMsg(
    ::google::protobuf::Arena* arena,
    const AnsTestMsg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AnsTestMsg_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AnsTestMsg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.AnsTestMsg)
}
inline PROTOBUF_NDEBUG_INLINE AnsTestMsg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_(arena),
        _cached_size_{0} {}

inline void AnsTestMsg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AnsTestMsg::~AnsTestMsg() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.AnsTestMsg)
  SharedDtor(*this);
}
inline void AnsTestMsg::SharedDtor(MessageLite& self) {
  AnsTestMsg& this_ = static_cast<AnsTestMsg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.msg_.Destroy();
  this_._impl_.~Impl_();
}

inline void* AnsTestMsg::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) AnsTestMsg(arena);
}
constexpr auto AnsTestMsg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AnsTestMsg),
                                            alignof(AnsTestMsg));
}
constexpr auto AnsTestMsg::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AnsTestMsg_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AnsTestMsg::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AnsTestMsg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AnsTestMsg::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AnsTestMsg>(), &AnsTestMsg::ByteSizeLong,
              &AnsTestMsg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AnsTestMsg, _impl_._cached_size_),
          false,
      },
      &AnsTestMsg::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        AnsTestMsg_class_data_ =
            AnsTestMsg::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* AnsTestMsg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AnsTestMsg_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AnsTestMsg_class_data_.tc_table);
  return AnsTestMsg_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2> AnsTestMsg::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AnsTestMsg_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::AnsTestMsg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string msg = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnsTestMsg, _impl_.msg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string msg = 1;
    {PROTOBUF_FIELD_OFFSET(AnsTestMsg, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\3\0\0\0\0\0\0"
    "UserAndGameServer.AnsTestMsg"
    "msg"
  }},
};

PROTOBUF_NOINLINE void AnsTestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.AnsTestMsg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* AnsTestMsg::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const AnsTestMsg& this_ = static_cast<const AnsTestMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* AnsTestMsg::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const AnsTestMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.AnsTestMsg)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string msg = 1;
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.AnsTestMsg.msg");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.AnsTestMsg)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t AnsTestMsg::ByteSizeLong(const MessageLite& base) {
          const AnsTestMsg& this_ = static_cast<const AnsTestMsg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t AnsTestMsg::ByteSizeLong() const {
          const AnsTestMsg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.AnsTestMsg)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string msg = 1;
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_msg());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void AnsTestMsg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnsTestMsg*>(&to_msg);
  auto& from = static_cast<const AnsTestMsg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.AnsTestMsg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnsTestMsg::CopyFrom(const AnsTestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.AnsTestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnsTestMsg::InternalSwap(AnsTestMsg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
}

::google::protobuf::Metadata AnsTestMsg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace UserAndGameServer
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_UserAndGameServer_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
