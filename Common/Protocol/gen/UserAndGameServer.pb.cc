// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: UserAndGameServer.proto
// Protobuf C++ Version: 5.30.0-dev

#include "UserAndGameServer.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace UserAndGameServer {

inline constexpr REQ_TEST_MSG::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR REQ_TEST_MSG::REQ_TEST_MSG(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(REQ_TEST_MSG_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct REQ_TEST_MSGDefaultTypeInternal {
  PROTOBUF_CONSTEXPR REQ_TEST_MSGDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~REQ_TEST_MSGDefaultTypeInternal() {}
  union {
    REQ_TEST_MSG _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 REQ_TEST_MSGDefaultTypeInternal _REQ_TEST_MSG_default_instance_;

inline constexpr REQ_PUBLIC_KEY::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR REQ_PUBLIC_KEY::REQ_PUBLIC_KEY(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(REQ_PUBLIC_KEY_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct REQ_PUBLIC_KEYDefaultTypeInternal {
  PROTOBUF_CONSTEXPR REQ_PUBLIC_KEYDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~REQ_PUBLIC_KEYDefaultTypeInternal() {}
  union {
    REQ_PUBLIC_KEY _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 REQ_PUBLIC_KEYDefaultTypeInternal _REQ_PUBLIC_KEY_default_instance_;

inline constexpr REQ_CONNECT::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR REQ_CONNECT::REQ_CONNECT(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(REQ_CONNECT_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct REQ_CONNECTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR REQ_CONNECTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~REQ_CONNECTDefaultTypeInternal() {}
  union {
    REQ_CONNECT _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 REQ_CONNECTDefaultTypeInternal _REQ_CONNECT_default_instance_;

inline constexpr ERROR_INFO::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_no_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ERROR_INFO::ERROR_INFO(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ERROR_INFO_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ERROR_INFODefaultTypeInternal {
  PROTOBUF_CONSTEXPR ERROR_INFODefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ERROR_INFODefaultTypeInternal() {}
  union {
    ERROR_INFO _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ERROR_INFODefaultTypeInternal _ERROR_INFO_default_instance_;

inline constexpr ANS_PUBLIC_KEY::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : public_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ANS_PUBLIC_KEY::ANS_PUBLIC_KEY(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ANS_PUBLIC_KEY_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ANS_PUBLIC_KEYDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ANS_PUBLIC_KEYDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ANS_PUBLIC_KEYDefaultTypeInternal() {}
  union {
    ANS_PUBLIC_KEY _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ANS_PUBLIC_KEYDefaultTypeInternal _ANS_PUBLIC_KEY_default_instance_;

inline constexpr ANS_CONNEVT::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_success_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ANS_CONNEVT::ANS_CONNEVT(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ANS_CONNEVT_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ANS_CONNEVTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ANS_CONNEVTDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ANS_CONNEVTDefaultTypeInternal() {}
  union {
    ANS_CONNEVT _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ANS_CONNEVTDefaultTypeInternal _ANS_CONNEVT_default_instance_;
}  // namespace UserAndGameServer
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_UserAndGameServer_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_UserAndGameServer_2eproto = nullptr;
const ::uint32_t
    TableStruct_UserAndGameServer_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ERROR_INFO, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ERROR_INFO, _impl_.error_no_),
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ERROR_INFO, _impl_.error_desc_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::REQ_PUBLIC_KEY, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::REQ_PUBLIC_KEY, _impl_.device_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ANS_PUBLIC_KEY, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ANS_PUBLIC_KEY, _impl_.public_key_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::REQ_CONNECT, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::REQ_CONNECT, _impl_.device_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ANS_CONNEVT, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ANS_CONNEVT, _impl_.is_success_),
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::ANS_CONNEVT, _impl_.session_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::REQ_TEST_MSG, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::UserAndGameServer::REQ_TEST_MSG, _impl_.msg_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::UserAndGameServer::ERROR_INFO)},
        {10, -1, -1, sizeof(::UserAndGameServer::REQ_PUBLIC_KEY)},
        {19, -1, -1, sizeof(::UserAndGameServer::ANS_PUBLIC_KEY)},
        {28, -1, -1, sizeof(::UserAndGameServer::REQ_CONNECT)},
        {37, -1, -1, sizeof(::UserAndGameServer::ANS_CONNEVT)},
        {47, -1, -1, sizeof(::UserAndGameServer::REQ_TEST_MSG)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::UserAndGameServer::_ERROR_INFO_default_instance_._instance,
    &::UserAndGameServer::_REQ_PUBLIC_KEY_default_instance_._instance,
    &::UserAndGameServer::_ANS_PUBLIC_KEY_default_instance_._instance,
    &::UserAndGameServer::_REQ_CONNECT_default_instance_._instance,
    &::UserAndGameServer::_ANS_CONNEVT_default_instance_._instance,
    &::UserAndGameServer::_REQ_TEST_MSG_default_instance_._instance,
};
const char descriptor_table_protodef_UserAndGameServer_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027UserAndGameServer.proto\022\021UserAndGameSe"
    "rver\"2\n\nERROR_INFO\022\020\n\010error_no\030\001 \001(\004\022\022\n\n"
    "error_desc\030\002 \001(\t\"#\n\016REQ_PUBLIC_KEY\022\021\n\tde"
    "vice_id\030\001 \001(\t\"$\n\016ANS_PUBLIC_KEY\022\022\n\npubli"
    "c_key\030\001 \001(\t\" \n\013REQ_CONNECT\022\021\n\tdevice_id\030"
    "\001 \001(\t\"5\n\013ANS_CONNEVT\022\022\n\nis_success\030\001 \001(\010"
    "\022\022\n\nsession_id\030\002 \001(\t\"\033\n\014REQ_TEST_MSG\022\013\n\003"
    "msg\030\001 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_UserAndGameServer_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_UserAndGameServer_2eproto = {
    false,
    false,
    297,
    descriptor_table_protodef_UserAndGameServer_2eproto,
    "UserAndGameServer.proto",
    &descriptor_table_UserAndGameServer_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_UserAndGameServer_2eproto::offsets,
    file_level_enum_descriptors_UserAndGameServer_2eproto,
    file_level_service_descriptors_UserAndGameServer_2eproto,
};
namespace UserAndGameServer {
// ===================================================================

class ERROR_INFO::_Internal {
 public:
};

ERROR_INFO::ERROR_INFO(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ERROR_INFO_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.ERROR_INFO)
}
inline PROTOBUF_NDEBUG_INLINE ERROR_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::ERROR_INFO& from_msg)
      : error_desc_(arena, from.error_desc_),
        _cached_size_{0} {}

ERROR_INFO::ERROR_INFO(
    ::google::protobuf::Arena* arena,
    const ERROR_INFO& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ERROR_INFO_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ERROR_INFO* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.error_no_ = from._impl_.error_no_;

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.ERROR_INFO)
}
inline PROTOBUF_NDEBUG_INLINE ERROR_INFO::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_desc_(arena),
        _cached_size_{0} {}

inline void ERROR_INFO::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.error_no_ = {};
}
ERROR_INFO::~ERROR_INFO() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.ERROR_INFO)
  SharedDtor(*this);
}
inline void ERROR_INFO::SharedDtor(MessageLite& self) {
  ERROR_INFO& this_ = static_cast<ERROR_INFO&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_desc_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ERROR_INFO::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ERROR_INFO(arena);
}
constexpr auto ERROR_INFO::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ERROR_INFO),
                                            alignof(ERROR_INFO));
}
constexpr auto ERROR_INFO::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ERROR_INFO_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ERROR_INFO::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ERROR_INFO>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ERROR_INFO::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ERROR_INFO>(), &ERROR_INFO::ByteSizeLong,
              &ERROR_INFO::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ERROR_INFO, _impl_._cached_size_),
          false,
      },
      &ERROR_INFO::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ERROR_INFO_class_data_ =
            ERROR_INFO::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ERROR_INFO::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ERROR_INFO_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ERROR_INFO_class_data_.tc_table);
  return ERROR_INFO_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> ERROR_INFO::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ERROR_INFO_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::ERROR_INFO>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_desc = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ERROR_INFO, _impl_.error_desc_)}},
    // uint64 error_no = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ERROR_INFO, _impl_.error_no_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ERROR_INFO, _impl_.error_no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 error_no = 1;
    {PROTOBUF_FIELD_OFFSET(ERROR_INFO, _impl_.error_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string error_desc = 2;
    {PROTOBUF_FIELD_OFFSET(ERROR_INFO, _impl_.error_desc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\12\0\0\0\0\0"
    "UserAndGameServer.ERROR_INFO"
    "error_desc"
  }},
};

PROTOBUF_NOINLINE void ERROR_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.ERROR_INFO)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_desc_.ClearToEmpty();
  _impl_.error_no_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ERROR_INFO::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ERROR_INFO& this_ = static_cast<const ERROR_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ERROR_INFO::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ERROR_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.ERROR_INFO)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 error_no = 1;
          if (this_._internal_error_no() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_error_no(), target);
          }

          // string error_desc = 2;
          if (!this_._internal_error_desc().empty()) {
            const std::string& _s = this_._internal_error_desc();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.ERROR_INFO.error_desc");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.ERROR_INFO)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ERROR_INFO::ByteSizeLong(const MessageLite& base) {
          const ERROR_INFO& this_ = static_cast<const ERROR_INFO&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ERROR_INFO::ByteSizeLong() const {
          const ERROR_INFO& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.ERROR_INFO)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_desc = 2;
            if (!this_._internal_error_desc().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_desc());
            }
            // uint64 error_no = 1;
            if (this_._internal_error_no() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_error_no());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ERROR_INFO::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ERROR_INFO*>(&to_msg);
  auto& from = static_cast<const ERROR_INFO&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.ERROR_INFO)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_desc().empty()) {
    _this->_internal_set_error_desc(from._internal_error_desc());
  }
  if (from._internal_error_no() != 0) {
    _this->_impl_.error_no_ = from._impl_.error_no_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ERROR_INFO::CopyFrom(const ERROR_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.ERROR_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ERROR_INFO::InternalSwap(ERROR_INFO* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_desc_, &other->_impl_.error_desc_, arena);
        swap(_impl_.error_no_, other->_impl_.error_no_);
}

::google::protobuf::Metadata ERROR_INFO::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class REQ_PUBLIC_KEY::_Internal {
 public:
};

REQ_PUBLIC_KEY::REQ_PUBLIC_KEY(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, REQ_PUBLIC_KEY_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.REQ_PUBLIC_KEY)
}
inline PROTOBUF_NDEBUG_INLINE REQ_PUBLIC_KEY::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::REQ_PUBLIC_KEY& from_msg)
      : device_id_(arena, from.device_id_),
        _cached_size_{0} {}

REQ_PUBLIC_KEY::REQ_PUBLIC_KEY(
    ::google::protobuf::Arena* arena,
    const REQ_PUBLIC_KEY& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, REQ_PUBLIC_KEY_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  REQ_PUBLIC_KEY* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.REQ_PUBLIC_KEY)
}
inline PROTOBUF_NDEBUG_INLINE REQ_PUBLIC_KEY::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_id_(arena),
        _cached_size_{0} {}

inline void REQ_PUBLIC_KEY::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
REQ_PUBLIC_KEY::~REQ_PUBLIC_KEY() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.REQ_PUBLIC_KEY)
  SharedDtor(*this);
}
inline void REQ_PUBLIC_KEY::SharedDtor(MessageLite& self) {
  REQ_PUBLIC_KEY& this_ = static_cast<REQ_PUBLIC_KEY&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* REQ_PUBLIC_KEY::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) REQ_PUBLIC_KEY(arena);
}
constexpr auto REQ_PUBLIC_KEY::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(REQ_PUBLIC_KEY),
                                            alignof(REQ_PUBLIC_KEY));
}
constexpr auto REQ_PUBLIC_KEY::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_REQ_PUBLIC_KEY_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &REQ_PUBLIC_KEY::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<REQ_PUBLIC_KEY>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &REQ_PUBLIC_KEY::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<REQ_PUBLIC_KEY>(), &REQ_PUBLIC_KEY::ByteSizeLong,
              &REQ_PUBLIC_KEY::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(REQ_PUBLIC_KEY, _impl_._cached_size_),
          false,
      },
      &REQ_PUBLIC_KEY::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        REQ_PUBLIC_KEY_class_data_ =
            REQ_PUBLIC_KEY::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* REQ_PUBLIC_KEY::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&REQ_PUBLIC_KEY_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(REQ_PUBLIC_KEY_class_data_.tc_table);
  return REQ_PUBLIC_KEY_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 50, 2> REQ_PUBLIC_KEY::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    REQ_PUBLIC_KEY_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::REQ_PUBLIC_KEY>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(REQ_PUBLIC_KEY, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(REQ_PUBLIC_KEY, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\11\0\0\0\0\0\0"
    "UserAndGameServer.REQ_PUBLIC_KEY"
    "device_id"
  }},
};

PROTOBUF_NOINLINE void REQ_PUBLIC_KEY::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.REQ_PUBLIC_KEY)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* REQ_PUBLIC_KEY::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const REQ_PUBLIC_KEY& this_ = static_cast<const REQ_PUBLIC_KEY&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* REQ_PUBLIC_KEY::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const REQ_PUBLIC_KEY& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.REQ_PUBLIC_KEY)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string device_id = 1;
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.REQ_PUBLIC_KEY.device_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.REQ_PUBLIC_KEY)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t REQ_PUBLIC_KEY::ByteSizeLong(const MessageLite& base) {
          const REQ_PUBLIC_KEY& this_ = static_cast<const REQ_PUBLIC_KEY&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t REQ_PUBLIC_KEY::ByteSizeLong() const {
          const REQ_PUBLIC_KEY& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.REQ_PUBLIC_KEY)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string device_id = 1;
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void REQ_PUBLIC_KEY::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<REQ_PUBLIC_KEY*>(&to_msg);
  auto& from = static_cast<const REQ_PUBLIC_KEY&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.REQ_PUBLIC_KEY)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void REQ_PUBLIC_KEY::CopyFrom(const REQ_PUBLIC_KEY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.REQ_PUBLIC_KEY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void REQ_PUBLIC_KEY::InternalSwap(REQ_PUBLIC_KEY* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
}

::google::protobuf::Metadata REQ_PUBLIC_KEY::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ANS_PUBLIC_KEY::_Internal {
 public:
};

ANS_PUBLIC_KEY::ANS_PUBLIC_KEY(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ANS_PUBLIC_KEY_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.ANS_PUBLIC_KEY)
}
inline PROTOBUF_NDEBUG_INLINE ANS_PUBLIC_KEY::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::ANS_PUBLIC_KEY& from_msg)
      : public_key_(arena, from.public_key_),
        _cached_size_{0} {}

ANS_PUBLIC_KEY::ANS_PUBLIC_KEY(
    ::google::protobuf::Arena* arena,
    const ANS_PUBLIC_KEY& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ANS_PUBLIC_KEY_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ANS_PUBLIC_KEY* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.ANS_PUBLIC_KEY)
}
inline PROTOBUF_NDEBUG_INLINE ANS_PUBLIC_KEY::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : public_key_(arena),
        _cached_size_{0} {}

inline void ANS_PUBLIC_KEY::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ANS_PUBLIC_KEY::~ANS_PUBLIC_KEY() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.ANS_PUBLIC_KEY)
  SharedDtor(*this);
}
inline void ANS_PUBLIC_KEY::SharedDtor(MessageLite& self) {
  ANS_PUBLIC_KEY& this_ = static_cast<ANS_PUBLIC_KEY&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.public_key_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ANS_PUBLIC_KEY::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ANS_PUBLIC_KEY(arena);
}
constexpr auto ANS_PUBLIC_KEY::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ANS_PUBLIC_KEY),
                                            alignof(ANS_PUBLIC_KEY));
}
constexpr auto ANS_PUBLIC_KEY::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ANS_PUBLIC_KEY_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ANS_PUBLIC_KEY::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ANS_PUBLIC_KEY>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ANS_PUBLIC_KEY::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ANS_PUBLIC_KEY>(), &ANS_PUBLIC_KEY::ByteSizeLong,
              &ANS_PUBLIC_KEY::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ANS_PUBLIC_KEY, _impl_._cached_size_),
          false,
      },
      &ANS_PUBLIC_KEY::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ANS_PUBLIC_KEY_class_data_ =
            ANS_PUBLIC_KEY::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ANS_PUBLIC_KEY::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ANS_PUBLIC_KEY_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ANS_PUBLIC_KEY_class_data_.tc_table);
  return ANS_PUBLIC_KEY_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 51, 2> ANS_PUBLIC_KEY::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ANS_PUBLIC_KEY_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::ANS_PUBLIC_KEY>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string public_key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ANS_PUBLIC_KEY, _impl_.public_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string public_key = 1;
    {PROTOBUF_FIELD_OFFSET(ANS_PUBLIC_KEY, _impl_.public_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\12\0\0\0\0\0\0"
    "UserAndGameServer.ANS_PUBLIC_KEY"
    "public_key"
  }},
};

PROTOBUF_NOINLINE void ANS_PUBLIC_KEY::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.ANS_PUBLIC_KEY)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.public_key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ANS_PUBLIC_KEY::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ANS_PUBLIC_KEY& this_ = static_cast<const ANS_PUBLIC_KEY&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ANS_PUBLIC_KEY::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ANS_PUBLIC_KEY& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.ANS_PUBLIC_KEY)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string public_key = 1;
          if (!this_._internal_public_key().empty()) {
            const std::string& _s = this_._internal_public_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.ANS_PUBLIC_KEY.public_key");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.ANS_PUBLIC_KEY)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ANS_PUBLIC_KEY::ByteSizeLong(const MessageLite& base) {
          const ANS_PUBLIC_KEY& this_ = static_cast<const ANS_PUBLIC_KEY&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ANS_PUBLIC_KEY::ByteSizeLong() const {
          const ANS_PUBLIC_KEY& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.ANS_PUBLIC_KEY)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string public_key = 1;
            if (!this_._internal_public_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_public_key());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ANS_PUBLIC_KEY::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ANS_PUBLIC_KEY*>(&to_msg);
  auto& from = static_cast<const ANS_PUBLIC_KEY&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.ANS_PUBLIC_KEY)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_public_key().empty()) {
    _this->_internal_set_public_key(from._internal_public_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ANS_PUBLIC_KEY::CopyFrom(const ANS_PUBLIC_KEY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.ANS_PUBLIC_KEY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ANS_PUBLIC_KEY::InternalSwap(ANS_PUBLIC_KEY* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.public_key_, &other->_impl_.public_key_, arena);
}

::google::protobuf::Metadata ANS_PUBLIC_KEY::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class REQ_CONNECT::_Internal {
 public:
};

REQ_CONNECT::REQ_CONNECT(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, REQ_CONNECT_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.REQ_CONNECT)
}
inline PROTOBUF_NDEBUG_INLINE REQ_CONNECT::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::REQ_CONNECT& from_msg)
      : device_id_(arena, from.device_id_),
        _cached_size_{0} {}

REQ_CONNECT::REQ_CONNECT(
    ::google::protobuf::Arena* arena,
    const REQ_CONNECT& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, REQ_CONNECT_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  REQ_CONNECT* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.REQ_CONNECT)
}
inline PROTOBUF_NDEBUG_INLINE REQ_CONNECT::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_id_(arena),
        _cached_size_{0} {}

inline void REQ_CONNECT::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
REQ_CONNECT::~REQ_CONNECT() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.REQ_CONNECT)
  SharedDtor(*this);
}
inline void REQ_CONNECT::SharedDtor(MessageLite& self) {
  REQ_CONNECT& this_ = static_cast<REQ_CONNECT&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.device_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* REQ_CONNECT::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) REQ_CONNECT(arena);
}
constexpr auto REQ_CONNECT::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(REQ_CONNECT),
                                            alignof(REQ_CONNECT));
}
constexpr auto REQ_CONNECT::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_REQ_CONNECT_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &REQ_CONNECT::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<REQ_CONNECT>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &REQ_CONNECT::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<REQ_CONNECT>(), &REQ_CONNECT::ByteSizeLong,
              &REQ_CONNECT::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(REQ_CONNECT, _impl_._cached_size_),
          false,
      },
      &REQ_CONNECT::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        REQ_CONNECT_class_data_ =
            REQ_CONNECT::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* REQ_CONNECT::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&REQ_CONNECT_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(REQ_CONNECT_class_data_.tc_table);
  return REQ_CONNECT_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 47, 2> REQ_CONNECT::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    REQ_CONNECT_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::REQ_CONNECT>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string device_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(REQ_CONNECT, _impl_.device_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_id = 1;
    {PROTOBUF_FIELD_OFFSET(REQ_CONNECT, _impl_.device_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\11\0\0\0\0\0\0"
    "UserAndGameServer.REQ_CONNECT"
    "device_id"
  }},
};

PROTOBUF_NOINLINE void REQ_CONNECT::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.REQ_CONNECT)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* REQ_CONNECT::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const REQ_CONNECT& this_ = static_cast<const REQ_CONNECT&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* REQ_CONNECT::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const REQ_CONNECT& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.REQ_CONNECT)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string device_id = 1;
          if (!this_._internal_device_id().empty()) {
            const std::string& _s = this_._internal_device_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.REQ_CONNECT.device_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.REQ_CONNECT)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t REQ_CONNECT::ByteSizeLong(const MessageLite& base) {
          const REQ_CONNECT& this_ = static_cast<const REQ_CONNECT&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t REQ_CONNECT::ByteSizeLong() const {
          const REQ_CONNECT& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.REQ_CONNECT)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string device_id = 1;
            if (!this_._internal_device_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_device_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void REQ_CONNECT::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<REQ_CONNECT*>(&to_msg);
  auto& from = static_cast<const REQ_CONNECT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.REQ_CONNECT)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_id().empty()) {
    _this->_internal_set_device_id(from._internal_device_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void REQ_CONNECT::CopyFrom(const REQ_CONNECT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.REQ_CONNECT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void REQ_CONNECT::InternalSwap(REQ_CONNECT* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_id_, &other->_impl_.device_id_, arena);
}

::google::protobuf::Metadata REQ_CONNECT::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ANS_CONNEVT::_Internal {
 public:
};

ANS_CONNEVT::ANS_CONNEVT(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ANS_CONNEVT_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.ANS_CONNEVT)
}
inline PROTOBUF_NDEBUG_INLINE ANS_CONNEVT::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::ANS_CONNEVT& from_msg)
      : session_id_(arena, from.session_id_),
        _cached_size_{0} {}

ANS_CONNEVT::ANS_CONNEVT(
    ::google::protobuf::Arena* arena,
    const ANS_CONNEVT& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ANS_CONNEVT_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ANS_CONNEVT* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_success_ = from._impl_.is_success_;

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.ANS_CONNEVT)
}
inline PROTOBUF_NDEBUG_INLINE ANS_CONNEVT::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : session_id_(arena),
        _cached_size_{0} {}

inline void ANS_CONNEVT::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_success_ = {};
}
ANS_CONNEVT::~ANS_CONNEVT() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.ANS_CONNEVT)
  SharedDtor(*this);
}
inline void ANS_CONNEVT::SharedDtor(MessageLite& self) {
  ANS_CONNEVT& this_ = static_cast<ANS_CONNEVT&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.session_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ANS_CONNEVT::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ANS_CONNEVT(arena);
}
constexpr auto ANS_CONNEVT::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ANS_CONNEVT),
                                            alignof(ANS_CONNEVT));
}
constexpr auto ANS_CONNEVT::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ANS_CONNEVT_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ANS_CONNEVT::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ANS_CONNEVT>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ANS_CONNEVT::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ANS_CONNEVT>(), &ANS_CONNEVT::ByteSizeLong,
              &ANS_CONNEVT::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ANS_CONNEVT, _impl_._cached_size_),
          false,
      },
      &ANS_CONNEVT::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ANS_CONNEVT_class_data_ =
            ANS_CONNEVT::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* ANS_CONNEVT::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ANS_CONNEVT_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ANS_CONNEVT_class_data_.tc_table);
  return ANS_CONNEVT_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> ANS_CONNEVT::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ANS_CONNEVT_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::ANS_CONNEVT>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string session_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ANS_CONNEVT, _impl_.session_id_)}},
    // bool is_success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ANS_CONNEVT, _impl_.is_success_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ANS_CONNEVT, _impl_.is_success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_success = 1;
    {PROTOBUF_FIELD_OFFSET(ANS_CONNEVT, _impl_.is_success_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string session_id = 2;
    {PROTOBUF_FIELD_OFFSET(ANS_CONNEVT, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\0\12\0\0\0\0\0"
    "UserAndGameServer.ANS_CONNEVT"
    "session_id"
  }},
};

PROTOBUF_NOINLINE void ANS_CONNEVT::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.ANS_CONNEVT)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  _impl_.is_success_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ANS_CONNEVT::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ANS_CONNEVT& this_ = static_cast<const ANS_CONNEVT&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ANS_CONNEVT::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ANS_CONNEVT& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.ANS_CONNEVT)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool is_success = 1;
          if (this_._internal_is_success() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_is_success(), target);
          }

          // string session_id = 2;
          if (!this_._internal_session_id().empty()) {
            const std::string& _s = this_._internal_session_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.ANS_CONNEVT.session_id");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.ANS_CONNEVT)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ANS_CONNEVT::ByteSizeLong(const MessageLite& base) {
          const ANS_CONNEVT& this_ = static_cast<const ANS_CONNEVT&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ANS_CONNEVT::ByteSizeLong() const {
          const ANS_CONNEVT& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.ANS_CONNEVT)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string session_id = 2;
            if (!this_._internal_session_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_session_id());
            }
            // bool is_success = 1;
            if (this_._internal_is_success() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ANS_CONNEVT::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ANS_CONNEVT*>(&to_msg);
  auto& from = static_cast<const ANS_CONNEVT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.ANS_CONNEVT)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_is_success() != 0) {
    _this->_impl_.is_success_ = from._impl_.is_success_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ANS_CONNEVT::CopyFrom(const ANS_CONNEVT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.ANS_CONNEVT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ANS_CONNEVT::InternalSwap(ANS_CONNEVT* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
        swap(_impl_.is_success_, other->_impl_.is_success_);
}

::google::protobuf::Metadata ANS_CONNEVT::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class REQ_TEST_MSG::_Internal {
 public:
};

REQ_TEST_MSG::REQ_TEST_MSG(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, REQ_TEST_MSG_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UserAndGameServer.REQ_TEST_MSG)
}
inline PROTOBUF_NDEBUG_INLINE REQ_TEST_MSG::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::UserAndGameServer::REQ_TEST_MSG& from_msg)
      : msg_(arena, from.msg_),
        _cached_size_{0} {}

REQ_TEST_MSG::REQ_TEST_MSG(
    ::google::protobuf::Arena* arena,
    const REQ_TEST_MSG& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, REQ_TEST_MSG_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  REQ_TEST_MSG* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:UserAndGameServer.REQ_TEST_MSG)
}
inline PROTOBUF_NDEBUG_INLINE REQ_TEST_MSG::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_(arena),
        _cached_size_{0} {}

inline void REQ_TEST_MSG::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
REQ_TEST_MSG::~REQ_TEST_MSG() {
  // @@protoc_insertion_point(destructor:UserAndGameServer.REQ_TEST_MSG)
  SharedDtor(*this);
}
inline void REQ_TEST_MSG::SharedDtor(MessageLite& self) {
  REQ_TEST_MSG& this_ = static_cast<REQ_TEST_MSG&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.msg_.Destroy();
  this_._impl_.~Impl_();
}

inline void* REQ_TEST_MSG::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) REQ_TEST_MSG(arena);
}
constexpr auto REQ_TEST_MSG::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(REQ_TEST_MSG),
                                            alignof(REQ_TEST_MSG));
}
constexpr auto REQ_TEST_MSG::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_REQ_TEST_MSG_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &REQ_TEST_MSG::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<REQ_TEST_MSG>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &REQ_TEST_MSG::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<REQ_TEST_MSG>(), &REQ_TEST_MSG::ByteSizeLong,
              &REQ_TEST_MSG::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(REQ_TEST_MSG, _impl_._cached_size_),
          false,
      },
      &REQ_TEST_MSG::kDescriptorMethods,
      &descriptor_table_UserAndGameServer_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        REQ_TEST_MSG_class_data_ =
            REQ_TEST_MSG::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* REQ_TEST_MSG::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&REQ_TEST_MSG_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(REQ_TEST_MSG_class_data_.tc_table);
  return REQ_TEST_MSG_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 42, 2> REQ_TEST_MSG::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    REQ_TEST_MSG_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::UserAndGameServer::REQ_TEST_MSG>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string msg = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(REQ_TEST_MSG, _impl_.msg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string msg = 1;
    {PROTOBUF_FIELD_OFFSET(REQ_TEST_MSG, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\3\0\0\0\0\0\0"
    "UserAndGameServer.REQ_TEST_MSG"
    "msg"
  }},
};

PROTOBUF_NOINLINE void REQ_TEST_MSG::Clear() {
// @@protoc_insertion_point(message_clear_start:UserAndGameServer.REQ_TEST_MSG)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* REQ_TEST_MSG::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const REQ_TEST_MSG& this_ = static_cast<const REQ_TEST_MSG&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* REQ_TEST_MSG::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const REQ_TEST_MSG& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:UserAndGameServer.REQ_TEST_MSG)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string msg = 1;
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UserAndGameServer.REQ_TEST_MSG.msg");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:UserAndGameServer.REQ_TEST_MSG)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t REQ_TEST_MSG::ByteSizeLong(const MessageLite& base) {
          const REQ_TEST_MSG& this_ = static_cast<const REQ_TEST_MSG&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t REQ_TEST_MSG::ByteSizeLong() const {
          const REQ_TEST_MSG& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:UserAndGameServer.REQ_TEST_MSG)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string msg = 1;
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_msg());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void REQ_TEST_MSG::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<REQ_TEST_MSG*>(&to_msg);
  auto& from = static_cast<const REQ_TEST_MSG&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UserAndGameServer.REQ_TEST_MSG)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void REQ_TEST_MSG::CopyFrom(const REQ_TEST_MSG& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserAndGameServer.REQ_TEST_MSG)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void REQ_TEST_MSG::InternalSwap(REQ_TEST_MSG* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
}

::google::protobuf::Metadata REQ_TEST_MSG::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace UserAndGameServer
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_UserAndGameServer_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
